# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  upload-artifact:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - run:
          name: nstall SonarScanner
          command: |
           mvn clean install
           wget http://www-eu.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz
            tar xzf apache-maven-3.5.4-bin.tar.gz
            rm apache-maven-3.5.4-bin.tar.gz
            ln -s apache-maven-3.5.4 maven
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.5.0.2216-linux.zip
            unzip sonar-scanner-cli-4.5.0.2216-linux.zip
            rm sonar-scanner-cli-4.5.0.2216-linux.zip
            export PATH=$PATH:/sonar-scanner-3.3.0.1492-linux/bin/
            cd /home/circleci/project/
            # mvn clean package
            mvn install -DskipTests
            mvn checkstyle:checkstyle
            ls -lrt /home/circleci/project/target/
            
      - run:
          name: Analyze with SonarCloud
          command: |
           ./sonar-scanner-4.5.0.2216-linux/bin/sonar-scanner \
              -Dsonar.projectKey=saks-code-repo \
              -Dsonar.organization=dhanu0001 \
              -Dsonar.sources=. \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=97e22ce748b6b6855d1f1fcd0e3ca2323abd0219 \
              -Dsonar.sources=src/main/java/ \
              -Dsonar.java.binaries=target/classes
