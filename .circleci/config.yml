# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - add_ssh_keys:
              fingerprints:
              - "e3:3d:6c:95:a1:b3:35:2c:2f:58:dc:d6:89:c4:38:ea"
      - checkout
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      - run:
          name: Creating Artifacts
          working_directory: /home/circleci/project/target
          command: |
            mkdir /tmp/artifacts;
            cp -r "/home/circleci/project/webapp/target/webapp.war" /tmp/artifacts;
      - run:
          name: Deploy Over SSH
          command: |
              #ssh -o StrictHostKeyChecking=no circleuser@ec2-54-91-238-15.compute-1.amazonaws.com
              scp -o StrictHostKeyChecking=no /home/circleci/project/webapp/target/webapp.war circleuser@ec2-54-226-250-92.compute-1.amazonaws.com:/tmp
              #sudo ssh circleuser@ec2-54-91-238-15.compute-1.amazonaws.com
             #sudo spawn ssh circleuser@ec2-18-234-224-234.compute-1.amazonaws.com
                #scp -r /home/circleci/project/target/maven-web-application.war circleuser@ec2-54-91-238-15.compute-1.amazonaws.com:/tmp
      - store_artifacts: 
          path: /tmp/artifacts

      - store_artifacts:
          path: /tmp/artifacts
      - run:
          name: Test
          command: mvn test
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test